generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  url      = env("DATABASE_URL")
}

model Message {
  author            String
  channel           String
  guild             String
  message           String     @id
  thread            String?
  starboardOriginal Starboard? @relation("original")
  starboardPinned   Starboard? @relation("pinned")
}

model Starboard {
  originalId String  @unique
  pinnedId   String  @id
  original   Message @relation("original", fields: [originalId], references: [message])
  pinned     Message @relation("pinned", fields: [pinnedId], references: [message])
}

model Configuration {
  guild    String
  property ConfigurationKey
  value    String

  @@id([guild, property])
}

model TwitchFollows {
  channel  String
  mentions Json?
  guild    String
  user     String

  @@id([channel, user])
}

enum ConfigurationKey {
  StarboardChannel
  StarboardCount
}

model HalloweenGuild {
  channels    Json
  id          String  @id
  enabled     Boolean @default(false)
  frequency   Int     @default(5)
  spawnChance Int     @default(50)
}

model HalloweenUser {
  id                Int                    @id @default(autoincrement())
  guild             String
  user              String
  HalloweenCandy    HalloweenInventory[]
  HalloweenUpgrades HalloweenUserUpgrade[]

  @@unique([guild, user])
}

model HalloweenInventory {
  candyName String
  count     Int            @default(0)
  guild     String
  id        Int            @id @default(autoincrement())
  user      HalloweenUser  @relation(fields: [userId], references: [id])
  userId    Int

  @@unique([candyName, guild, userId])
}

model HalloweenUserUpgrade {
  guild        String
  upgrade  String
  upgradeCount Int              @default(0)
  user         HalloweenUser    @relation(fields: [userId], references: [id])
  userId       Int

  @@unique([guild, upgrade, userId])
}

model Confession {
	guild String
	message String @id
	user String
}
